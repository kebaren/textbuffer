根据测试结果，我发现了以下导致测试不通过的问题：
TestNewPieceTree 测试失败：
CRLF文本测试失败：期望 "Line 1\r\nLine 2\r\nLine 3"，但得到 "Line 1\nLine 2\nLine 3"
问题：CRLF换行符被统一转换为LF
TestInsert 测试失败：
在中间插入测试失败：期望 "Hello, World"，但得到 "Hello World, "
插入CRLF测试失败：期望 "Hello\r\nWorld"，但得到 "Hello\nWorld"
问题：插入位置计算可能有问题，CRLF处理不正确
TestDelete 测试失败：
删除中间测试失败：期望 "Hello World"，但得到 "Hello,orld"
问题：删除操作的范围计算可能有问题
TestGetLength 测试失败：
多行文本：期望长度11，但得到13
CRLF文本：期望长度12，但得到14
特殊字符：期望长度11，但得到12
问题：长度计算可能包含了额外的换行符或特殊字符
TestGetPositionAt 测试失败：
换行位置：期望行2列1，但得到行1列6
越界位置：期望行1列6，但得到行1列1
问题：位置计算逻辑有误，特别是对换行符的处理
TestGetOffsetAt 测试失败：
越界列：期望偏移量5，但得到9
负列号：期望偏移量0，但得到-1
问题：偏移量计算逻辑有误，边界检查不完善
TestComplexOperations 测试失败：
位置转换：期望行2列1，但得到行1列8
偏移量：期望10，但得到11
行内容：期望 "Hello, Worl"，但得到 "HelloWorld"
问题：复杂操作组合下的状态维护不正确
主要问题总结：
换行符处理：
CRLF和LF的转换处理不一致
换行符在长度计算和位置计算中的处理有误
位置计算：
行号和列号的计算逻辑有误
换行符位置的处理不正确
边界处理：
越界情况的处理不完善
负值处理不正确
插入和删除操作：
插入位置的计算可能有问题
删除范围的计算不准确
长度计算：
特殊字符和换行符的长度计算有误
可能多计算或少计算了某些字符
建议修复步骤：
首先修复换行符处理：
统一CRLF和LF的处理方式
确保长度计算正确考虑换行符
修复位置计算：
重写GetPositionAt和GetOffsetAt的逻辑
正确处理换行符位置
改进边界处理：
添加更严格的边界检查
统一处理越界和负值情况
修复插入和删除操作：
重新检查位置计算逻辑
确保操作范围正确
完善长度计算：
修正特殊字符的处理
确保换行符计算准确
这些问题的修复需要仔细检查PieceTree的实现，特别是与文本操作和位置计算相关的部分。建议逐个修复这些问题，并在每次修改后进行完整的测试。